parameters:
  kapitan:
    compile:
    - output_path: manifests
      input_type: jsonnet
      prune: true
      input_paths:
        - components/mysql/main.jsonnet
      output_type: yml
    - output_path: scripts
      input_type: jinja2
      input_paths:
        - scripts
    - output_path: .
      output_type: yml
      input_type: jinja2
      input_paths:
        - docs/mysql/README.md
    validate:
    - type: kubernetes # mkdocs (1)!
      output_paths: # mkdocs (2)!
        - manifests/mysql_secret.yml
      kind: secret # temporarily replaced with 'deployment' during test # mkdocs (3)!
      version: 1.14.0 # optional, defaults to 1.14.0 # mkdocs (4)!
    - type: kubernetes
      output_paths:
        - manifests/mysql_service_jsonnet.yml
        - manifests/mysql_service_simple.yml
      kind: service
      version: 1.14.0
    # For vaultkv secrets it is important to declare auth in parameters
    secrets:
      vaultkv:
        auth: token
      vaulttransit:
        auth: token
        key: my-vault-key
  mysql:
    storage: 10G
    storage_class: standard
    image: mysql:latest
    users:
      root:
        # If 'secrets/targets/${target_name}/mysql/password' doesn't exist, it will gen a random b64-encoded password
        password: ?{gpg:targets/${target_name}/mysql/password||randomstr|base64}
        # password: ?{gkms:targets/${target_name}/mysql/password||randomstr|base64}
        # password: ?{awskms:targets/${target_name}/mysql/password||randomstr|base64}

        # Generates the sha256 checksum of the previously declared B64'ed password
        # It's base64'ed again so that it can be used in kubernetes secrets
        password_sha256: ?{gpg:targets/${target_name}/mysql/password_sha256||reveal:targets/${target_name}/mysql/password|sha256|base64}

        password_subvar: ?{gpg:targets/${target_name}/mysql/subvars@var1.password}
        password_sha256_subvar: ?{gpg:targets/${target_name}/mysql/subvars@var2.password_sha256}

        # This secret requires a running vault instance & vaultkv parameters either in inventory or environment
        # password_vaultkv: ?{vaultkv:targets/${target_name}/mysql/vault_secret}

        # This secret requires a running vault instance & vaulttransit parameters either in inventory or environment
        # password_transit: ?{transit:${target_name}/mysql/vault_secret}
