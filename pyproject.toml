[build-system]
requires = [
    "poetry-core>=1.8.0",
    "poetry-version-plugin==0.1.3"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "kapitan"
description = "Generic templated configuration management for Kubernetes, Terraform and other things"
authors = [
    "Ricardo Amaro <ramaro@kapicorp.com>"
]
documentation  = "https://kapitan.dev/"
repository = "https://github.com/kapicorp/kapitan"
readme = "README.md"
keywords = ["jsonnet", "kubernetes", "reclass", "jinja"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
license = "Apache-2.0"
version = "0.34.0a0"
packages = [
    { include = "kapitan" },
]

[tool.poetry.scripts]
kapitan = 'kapitan.cli:main'

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
coverage = "^7.5.0"
docker = "^7.0.0"
pytest-md = "^0.2.0"
pytest-emoji = "^0.2.0"


[tool.poetry-version-plugin]
source = "git-tag"

[tool.poetry.dependencies]
python = "^3.10,<3.12"
addict = "^2.4.0"
azure-keyvault-keys = "^4.7.0"
boto3 = "^1.18.17"
cryptography = ">=3.4.7,<43.0.0"
gitpython = "^3.1.30"
google-api-python-client = "^2.15.0"
hvac = "1.2.1"
jinja2 = "^3.0.1"
jsonnet = "^0.20.0"
jsonschema = "^4.17.3"
python-gnupg = ">=0.4.7,<0.6.0"
pyyaml = "^6.0"
requests = "^2.28.2"
six = "^1.16.0"
toml = "^0.10.2"
yamllint = "^1.29.0"
python-magic = "^0.4.27"
azure-identity = "^1.12.0"
certifi = "*"
gitdb = "^4.0.10"
packaging = ">=23,<25"
typing-extensions = "^4.0.0"
gojsonnet = { version = "^0.20.0", optional = true }
docker = { version = ">=5,<8", optional = true }
reclass = {git = "https://github.com/kapicorp/reclass"}
reclass-rs = {version = "^0.4.0"}
kadet = "^0.3.0"
poetry = "^1.8.3"
regex = "^2024.5.10"

[tool.poetry.extras]
gojsonnet = ["gojsonnet"]
test = ["docker", "reclass-rs"]
reclass-rs = ["reclass-rs"]

[tool.black]
line-length = 110
target-version = ['py310']
exclude = '''
(
  /(
    | .*version.py
  )
)
'''
