[build-system]
requires = [
    "poetry-core>=1.8.0",
    "poetry-version-plugin==0.1.3"
]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "kapitan"
description = "Generic templated configuration management for Kubernetes, Terraform and other things"
homepage = "https://kapitan.dev"
authors = [
    "Ricardo Amaro <ramaro@kapicorp.com>"
]
documentation  = "https://kapitan.dev/"
repository = "https://github.com/kapicorp/kapitan"
readme = "README.md"
keywords = ["jsonnet", "kubernetes", "reclass", "jinja"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
license = "Apache-2.0"
version = "0.34.7"
packages = [
    { include = "kapitan" },
]

[tool.poetry.scripts]
kapitan = 'kapitan.cli:main'


[tool.poetry.group.test]
optional = true

[tool.poetry.group.test.dependencies]
pytest = "^8.2.0"
coverage = "^7.6.1"
pytest-md = "^0.2.0"
pytest-emoji = "^0.2.0"
pytest-cov = ">=3,<7"
docker = "^7.0.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.6"
pre-commit = ">=3.8,<5.0"


[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
markdown-include = "^0.8.1"
mkdocs-material = "^9.5.34"
mkdocs = "^1.6.1"
pymdown-extensions = "^10.9"
mike = "^2.1.3"
mkdocs-material-extensions = "^1.3.1"
markdown-exec = {extras = ["ansi"], version = "^1.10.0"}

[tool.poetry-version-plugin]
source = "git-tag"

[tool.poetry.dependencies]
python = "^3.10,<3.15"

addict = "^2.4.0"
jinja2 = "^3.0.1"
jsonnet = "^0.21.0"
jsonschema = "^4.17.3"
pyyaml = "^6.0"
requests = "^2.28.2"
toml = "^0.10.2"
yamllint = "^1.29.0"

# Data validation and configuration
pydantic = "^2.8.2"
pydantic-settings = "^2.4.0"
python-box = "^7.2.0"
jsonpath-ng = "^1.7.0"

# Inventory backends
kapicorp-reclass = ">=2.0.0"
omegaconf = {version = "^2.4.0.dev3", optional = true}
reclass-rs = {version = "^0.9.0", optional = true }

# Input types
gojsonnet = { version = "^0.21.0", optional = true }
kadet = "^0.3.0"
copier = "^9.3.1"

# Cloud and secrets management
azure-keyvault-keys = "^4.7.0"
azure-identity = "^1.12.0"
boto3 = "^1.18.17"
google-api-python-client = "^2.15.0"
hvac = "2.3.0"
python-gnupg = ">=0.4.7,<0.6.0"
cryptography = ">=3.4.7,<44.0.0"

# Git and file management
gitpython = "^3.1.30"
gitdb = "^4.0.10"
filetype = "^1.2.0"

# Utilities
certifi = "*"
packaging = ">=23,<26"
regex = "^2024.5.10"
strenum = { version = "^0.4.15", python = "^3.10" }
typing-extensions = "^4.0.0"
six = "^1.16.0"  # TODO: Remove after replacing six.string_types with native Python

[tool.poetry.extras]
gojsonnet = ["gojsonnet"]
reclass-rs = ["reclass-rs"]
omegaconf = ["omegaconf"]

# Tool configurations moved to ruff.toml for consistency
# See ruff.toml for linting and formatting configuration

[tool.poetry_bumpversion.file."kapitan/version.py"]
search = 'VERSION = "{current_version}"'
replace = 'VERSION = "{new_version}"'

[tool.pytest.ini_options]
minversion = "8.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["kapitan"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/conftest.py",
    "*/__init__.py",
]

[tool.coverage.report]
precision = 2
fail_under = 65
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
