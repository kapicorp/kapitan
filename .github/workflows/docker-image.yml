---
name: Docker Build and Push
on:
  push: {}
  workflow_run:
    workflows:
      - Python Tests
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout kapitan recursively
        uses: actions/checkout@master
        with:
          submodules: recursive
      - name: Strip git ref prefix from tag version and store in TAG_VERSION
        run: |
          echo "TAG_VERSION=${GITHUB_REF#refs/*/v}" >> $GITHUB_ENV
          echo "REF_NAME=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Strip full version and just keep major part in MAJOR_VERSION VAR
        run: |
          echo "MAJOR_VERSION=${TAG_VERSION:0:4}" >> $GITHUB_ENV

      # Printing versions needs to be a separate step,
      # as they aren't set during the previous two steps
      - name: Print Versions
        run: |
          echo ${{ env.TAG_VERSION }}
          echo ${{ env.MAJOR_VERSION }}
          echo ${{ env.REF_NAME }}
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build PR/versioned tags
        if: github.ref != 'refs/heads/master'
        uses: docker/build-push-action@v2
        with:
          tags: kapicorp/kapitan:${{ format('{0}', env.REF_NAME ) }}
          push: ${{ github.event_name != 'pull_request' }}  # push image only on non-pull_requests
          file: Dockerfile
      # TODO push and tag as latest if release (and not RC)
      - name: Build latest tag
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          tags: kapicorp/kapitan:${{ format('{0}', env.REF_NAME ) }},kapicorp/kapitan:latest
          file: Dockerfile
      - name: Build PR/latest/versioned ci tags
        uses: docker/build-push-action@v2
        with:
          tags: kapicorp/kapitan:${{ format('{0}-ci', env.REF_NAME ) }}
          push: ${{ github.event_name != 'pull_request' }}  # push image only on non-pull_requests
          file: Dockerfile.ci
      - name: Test both Dockerfile and Dockerfile.ci in current ref
        run: |
          [ ${{ env.REF_NAME }} == "master" ] && tagname="latest" || tagname=${{ env.REF_NAME }}
          docker run -t --rm kapicorp/kapitan:${tagname} --version
          docker run -t --rm kapicorp/kapitan:${{ env.REF_NAME }}-ci kapitan --version
      - name: Build major version tag
        uses: docker/build-push-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tags: kapicorp/kapitan:${{ format('{0}', env.MAJOR_VERSION ) }}
          file: Dockerfile

      # TODO push and tag as latest if release (and not RC)
      - name: Build latest ci tag
        uses: docker/build-push-action@v2
        if: github.ref == 'refs/heads/master'
        with:
          tags: kapicorp/kapitan:ci
          file: Dockerfile.ci
      - name: Build version ci tag
        uses: docker/build-push-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tags: kapicorp/kapitan:${{ format('{0}-ci', env.TAG_VERSION ) }}
          file: Dockerfile.ci
      - name: Build major version ci tag
        uses: docker/build-push-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          tags: kapicorp/kapitan:${{ format('{0}-ci', env.MAJOR_VERSION ) }}
          file: Dockerfile.ci
