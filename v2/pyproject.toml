[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "skipper"
dynamic = ["version"]
description = "Generic templated configuration management for Kubernetes, Terraform and other things"
readme = "README.md"
license = "Apache-2.0"
authors = [
    {name = "Ricardo Amaro", email = "ramaro@kapicorp.com"},
]
maintainers = [
    {name = "Ricardo Amaro", email = "ramaro@kapicorp.com"},
]
keywords = [
    "jsonnet",
    "kubernetes", 
    "reclass",
    "jinja",
    "configuration-management",
    "templating"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
requires-python = ">=3.13"
dependencies = [
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "tomli-w>=1.0.0",
    "typer>=0.12.0",
    "rich>=13.0.0",
    "textual>=0.47.0",
    "jsonpath-ng>=1.6.0",
    "jinja2>=3.1.0",
    "pyyaml>=6.0.0",
    "jsonnet>=0.21.0",
    "requests>=2.28.0",
    "gitpython>=3.1.30",
    "cryptography>=41.0.0",
    "packaging>=23.0",
    "typing-extensions>=4.8.0",
    "omegaconf==2.4.0.dev3",
    "filetype>=1.2.0",
    "toml>=0.10.2",
    "six>=1.17.0",
    "cachetools>=5.5.0,<6.0.0",
    "kadet>=0.3.2",
    "kapicorp-reclass>=2.0.0",
    "regex>=2025.7.34",
    "kapitan @ file:///home/coder/kapitan",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.6.0",
    "mypy>=1.11.0",
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pre-commit>=3.8.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "coverage[toml]>=7.6.0",
]
legacy = [
    "kapitan @ file:///home/coder/kapitan",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "coverage[toml]>=7.6.0",
]
docs = [
    "mkdocs>=1.6.0",
    "mkdocs-material>=9.5.0",
    "mkdocs-material-extensions>=1.3.0",
    "pymdown-extensions>=10.9.0",
]

[project.scripts]
kapitan = "skipper.cli.main:app"

[project.urls]
Homepage = "https://kapitan.dev"
Documentation = "https://kapitan.dev"
Repository = "https://github.com/kapicorp/kapitan"
Issues = "https://github.com/kapicorp/kapitan/issues"
Changelog = "https://github.com/kapicorp/kapitan/blob/master/CHANGELOG.md"

[tool.hatch.version]
path = "src/skipper/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/skipper"]

[tool.hatch.build.targets.sdist]
include = [
    "src/skipper",
    "tests",
    "README.md",
    "LICENSE",
]

[tool.ruff]
target-version = "py313"
line-length = 110

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
    "ICN", # flake8-import-conventions
    "TCH", # flake8-type-checking
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["S101", "ARG", "FBT"]

[tool.ruff.lint.isort]
known-first-party = ["skipper"]

[tool.black]
target-version = ['py313']
line-length = 110

[tool.mypy]
python_version = "3.13"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=skipper",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/skipper"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.uv]
dev-dependencies = [
    "ruff>=0.6.0",
    "mypy>=1.11.0", 
    "pytest>=8.0.0",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.0",
    "pre-commit>=3.8.0",
    "black>=24.0.0",
    "isort>=5.13.0",
    "coverage[toml]>=7.6.0",
]
